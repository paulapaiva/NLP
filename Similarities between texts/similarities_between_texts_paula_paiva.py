# -*- coding: utf-8 -*-
"""Similarities between texts - Paula Paiva.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yRr4MT5pVhz6gIkqCU7F6bTG51M2KYOs
"""

import pandas as pd
import string
import nltk
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.preprocessing import MultiLabelBinarizer
from sklearn.metrics import jaccard_score
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer

nltk.download('punkt_tab')
nltk.download('stopwords')
nltk.download('wordnet')

# load data (set the right path in your computer)
df = pd.read_csv("/content/NikeProductDescriptions.csv")
df = df.dropna(subset=["Product Description"])
texts = df["Product Description"].tolist()

# preprocess the text
stop_words = set(stopwords.words("english"))
lemmatizer = WordNetLemmatizer()

def preprocess(text):
    text = text.lower()
    text = text.translate(str.maketrans("", "", string.punctuation))
    tokens = nltk.word_tokenize(text)
    tokens = [lemmatizer.lemmatize(word) for word in tokens if word not in stop_words]
    return tokens

processed = [preprocess(t) for t in texts]

# TF-IDF + Cosine Similarity
joined_texts = [" ".join(tokens) for tokens in processed]
vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(joined_texts)
cos_sim = cosine_similarity(tfidf_matrix)

print("Cosine similarity:")
for i in range(5):
    for j in range(i + 1, 5):
        print(f"{i} vs {j}: {cos_sim[i][j]:.2f}")

# jaccard similarity
mlb = MultiLabelBinarizer()
binary_matrix = mlb.fit_transform(processed)

print("\nJaccard similarity:")
for i in range(5):
    for j in range(i + 1, 5):
        score = jaccard_score(binary_matrix[i], binary_matrix[j])
        print(f"{i} vs {j}: {score:.2f}")