# -*- coding: utf-8 -*-
"""N-grams - Paula Paiva.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j455FqgAVrXMkZMhZ_by2PXMFhvcnmDa
"""

!pip install nltk pandas

import nltk
import pandas as pd
import string
from collections import Counter

nltk.download('brown')
nltk.download('punkt')

from nltk.corpus import brown

#load and clean corpus
tokens = [word.lower() for word in brown.words() if word.isalpha()]

# create n-grams and count frequencies
def get_ngrams_df(tokens, n):
    ngrams = zip(*[tokens[i:] for i in range(n)])
    ngrams = [" ".join(gram) for gram in ngrams]
    counter = Counter(ngrams)
    df = pd.DataFrame(counter.items(), columns=["ngram", "count"])
    df = df.sort_values(by="count", ascending=False).reset_index(drop=True)
    return df

# next word prediction
def predict_next_words(df, input_text, n=2, k=5):
    input_text = input_text.lower()
    if n == 1:
        prefix = ""
    else:
        prefix = " ".join(input_text.split()[-(n - 1):])
    matches = df[df['ngram'].str.startswith(prefix)]
    matches["next_word"] = matches["ngram"].apply(lambda x: x.split()[-1])
    top_k = matches.groupby("next_word")["count"].sum().sort_values(ascending=False).head(k)
    return top_k

n = 2
k = 5  # top 5 predictions

df_ngrams = get_ngrams_df(tokens, n)

input_seq = "the united"
predictions = predict_next_words(df_ngrams, input_seq, n=n, k=k)

print(f"Input: '{input_seq}'")
print("Top predictions:")
print(predictions)